{"ast":null,"code":"var _jsxFileName = \"/Users/abhisheksrivastav/Desktop/videoListing-learming/client/src/components/UploadVideo.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadVideo = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [videoUrl, setVideoUrl] = useState('');\n  const [thumbnailUrl, setThumbnailUrl] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const token = localStorage.getItem('token'); // Assuming token is stored in localStorage after login\n\n    try {\n      await axios.post('http://localhost:5000/api/videos/add', {\n        title,\n        videoUrl,\n        thumbnailUrl\n      }, {\n        headers: {\n          Authorization: token\n        }\n      });\n      alert('Video uploaded successfully!');\n    } catch (error) {\n      console.error('Error uploading video:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Title\",\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Video URL\",\n      value: videoUrl,\n      onChange: e => setVideoUrl(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Thumbnail URL\",\n      value: thumbnailUrl,\n      onChange: e => setThumbnailUrl(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Upload Video\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(UploadVideo, \"Z6pnOadzDnsErSgtYHrFoPXw3b0=\");\n_c = UploadVideo;\nexport default UploadVideo;\nvar _c;\n$RefreshReg$(_c, \"UploadVideo\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","UploadVideo","_s","title","setTitle","videoUrl","setVideoUrl","thumbnailUrl","setThumbnailUrl","handleSubmit","e","preventDefault","token","localStorage","getItem","post","headers","Authorization","alert","error","console","onSubmit","children","type","placeholder","value","onChange","target","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/abhisheksrivastav/Desktop/videoListing-learming/client/src/components/UploadVideo.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst UploadVideo = () => {\n    const [title, setTitle] = useState('');\n    const [videoUrl, setVideoUrl] = useState('');\n    const [thumbnailUrl, setThumbnailUrl] = useState('');\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const token = localStorage.getItem('token');  // Assuming token is stored in localStorage after login\n\n        try {\n            await axios.post('http://localhost:5000/api/videos/add', {\n                title, videoUrl, thumbnailUrl\n            }, {\n                headers: { Authorization: token }\n            });\n            alert('Video uploaded successfully!');\n        } catch (error) {\n            console.error('Error uploading video:', error);\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input type=\"text\" placeholder=\"Title\" value={title} onChange={(e) => setTitle(e.target.value)} required />\n            <input type=\"text\" placeholder=\"Video URL\" value={videoUrl} onChange={(e) => setVideoUrl(e.target.value)} required />\n            <input type=\"text\" placeholder=\"Thumbnail URL\" value={thumbnailUrl} onChange={(e) => setThumbnailUrl(e.target.value)} required />\n            <button type=\"submit\">Upload Video</button>\n        </form>\n    );\n};\n\nexport default UploadVideo;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMY,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAE;;IAE9C,IAAI;MACA,MAAMhB,KAAK,CAACiB,IAAI,CAAC,sCAAsC,EAAE;QACrDZ,KAAK;QAAEE,QAAQ;QAAEE;MACrB,CAAC,EAAE;QACCS,OAAO,EAAE;UAAEC,aAAa,EAAEL;QAAM;MACpC,CAAC,CAAC;MACFM,KAAK,CAAC,8BAA8B,CAAC;IACzC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAClD;EACJ,CAAC;EAED,oBACInB,OAAA;IAAMqB,QAAQ,EAAEZ,YAAa;IAAAa,QAAA,gBACzBtB,OAAA;MAAOuB,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC,OAAO;MAACC,KAAK,EAAEtB,KAAM;MAACuB,QAAQ,EAAGhB,CAAC,IAAKN,QAAQ,CAACM,CAAC,CAACiB,MAAM,CAACF,KAAK,CAAE;MAACG,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3GhC,OAAA;MAAOuB,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC,WAAW;MAACC,KAAK,EAAEpB,QAAS;MAACqB,QAAQ,EAAGhB,CAAC,IAAKJ,WAAW,CAACI,CAAC,CAACiB,MAAM,CAACF,KAAK,CAAE;MAACG,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrHhC,OAAA;MAAOuB,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC,eAAe;MAACC,KAAK,EAAElB,YAAa;MAACmB,QAAQ,EAAGhB,CAAC,IAAKF,eAAe,CAACE,CAAC,CAACiB,MAAM,CAACF,KAAK,CAAE;MAACG,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjIhC,OAAA;MAAQuB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAY;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEf,CAAC;AAAC9B,EAAA,CA7BID,WAAW;AAAAgC,EAAA,GAAXhC,WAAW;AA+BjB,eAAeA,WAAW;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}